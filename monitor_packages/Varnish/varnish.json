{
  "name": "Varnish",
  "description": "Folder for Varnish Monitors",
  "type": "MonitorsLibraryFolderExport",
  "children": [
    {
      "name": "Varnish - High Client (HTTP 4xx) Error Rate",
      "description": "This alert fires when there are too many HTTP requests (>5%) with a response status of 4xx.",
      "type": "MonitorsLibraryMonitorExport",
      "monitorType": "Logs",
      "evaluationDelay": "0m",
      "queries": [
        {
          "rowId": "A",
          "query": "proxy_system=varnish proxy_cluster=* | json \"log\" as _rawlog nodrop \n| if (isEmpty(_rawlog), _raw, _rawlog) as _raw\n| if (isEmpty(pod),_sourceHost,pod) as Server\n| parse regex \"(?<client_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<logname>\\S+)\\s+(?<user>[\\S]+)\\s+\\[\" nodrop\n| parse regex \"(?<client_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<local_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<logname>\\S+)\\s+(?<user>[\\S]+)\\s+\\[\" nodrop\n| parse regex \"\\s+\\[(?<date>[^\\]]+)\\]\\s+\\\"(?<method>\\w+)\\s+(?<uri>\\S+)\\s+(?<protocol>\\S+)\\\"\\s+(?<status_code>\\d+)\\s+(?<size>[\\d-]+)\" nodrop\n| parse regex \"\\\"(?<referrer>http[s]{0,1}:[^\\\"]+)\\\"\\s+\\\"(?<agent>[^\\\"]+?)\\\"\"\n| if (status_code matches \"4*\", 1, 0) as ServerError\n| sum(ServerError) as ServerErrors, count as TotalRequests by Server\n| (ServerErrors/TotalRequests) * 100 as ErrorPercentage\n| where ErrorPercentage > 5\n| fields Server, ErrorPercentage, ServerErrors, TotalRequests"
        }
      ],
      "triggers": [
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "Critical",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "GreaterThan",
          "field": null,
          "occurrenceType": "ResultCount",
          "triggerSource": "AllResults"
        },
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "ResolvedCritical",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "LessThanOrEqual",
          "field": null,
          "occurrenceType": "ResultCount",
          "triggerSource": "AllResults"
        }
      ],
      "notifications": [],
      "isDisabled": true,
      "groupNotifications": true,
      "notes": ""
    },
    {
      "name": "Varnish - Access from Highly Malicious Sources",
      "description": "This alert fires when an Varnish is accessed from highly malicious IP addresses.",
      "type": "MonitorsLibraryMonitorExport",
      "monitorType": "Logs",
      "evaluationDelay": "0m",
      "queries": [
        {
          "rowId": "A",
          "query": "proxy_system=varnish proxy_cluster=* | json \"log\" as _rawlog nodrop \n| if (isEmpty(_rawlog), _raw, _rawlog) as _raw\n| parse regex \"(?<remote_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<logname>\\S+)\\s+(?<user>[\\S]+)\\s+\\[\" nodrop\n| parse regex \"(?<remote_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<local_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<logname>\\S+)\\s+(?<user>[\\S]+)\\s+\\[\" nodrop\n| parse regex \"\\s+\\[(?<date>[^\\]]+)\\]\\s+\\\"(?<method>\\w+)\\s+(?<uri>\\S+)\\s+(?<protocol>\\S+)\\\"\\s+(?<status_code>\\d+)\\s+(?<size>[\\d-]+)\" nodrop\n| parse regex \"\\\"(?<referrer>http[s]{0,1}:[^\\\"]+)\\\"\\s+\\\"(?<agent>[^\\\"]+?)\\\"\"\n| lookup type, actor, raw, threatlevel as Malicious_Confidence from sumo://threat/cs on threat=remote_ip \n| where  type=\"ip_address\" and !isNull(Malicious_Confidence)\n| json field=raw \"labels[*].name\" as label_name \n| replace(label_name, \"\\\\/\",\"->\") as label_name\n| replace(label_name, \"\\\"\",\" \") as label_name\n| if (isEmpty(actor), \"Unassigned\", actor) as Actor\n| where Malicious_Confidence matches \"high\"\n| fields raw,Malicious_Confidence,remote_ip, actor, _raw"
        }
      ],
      "triggers": [
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "Critical",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "GreaterThan",
          "field": null,
          "occurrenceType": "ResultCount",
          "triggerSource": "AllResults"
        },
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "ResolvedCritical",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "LessThanOrEqual",
          "field": null,
          "occurrenceType": "ResultCount",
          "triggerSource": "AllResults"
        }
      ],
      "notifications": [],
      "isDisabled": true,
      "groupNotifications": true,
      "notes": ""
    },
    {
      "name": "Varnish - Backend connection retries",
      "description": "This alert is fired when backend connection retries",
      "type": "MonitorsLibraryMonitorExport",
      "monitorType": "Metrics",
      "evaluationDelay": "0m",
      "queries": [
        {
          "rowId": "A",
          "query": "metric=varnish_backend_retry proxy_cluster=* host=* | sum by proxy_cluster,host |  rate increasing | fillmissing 0"
        }
      ],
      "triggers": [
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "Warning",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "GreaterThan",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        },
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "ResolvedWarning",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "LessThanOrEqual",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        }
      ],
      "notifications": [],
      "isDisabled": true,
      "groupNotifications": true,
      "notes": ""
    },
    {
      "name": "Varnish - High Server (HTTP 5xx) Error Rate",
      "description": "This alert fires when there are too many HTTP requests (>5%) with a response status of 5xx.",
      "type": "MonitorsLibraryMonitorExport",
      "monitorType": "Logs",
      "evaluationDelay": "0m",
      "queries": [
        {
          "rowId": "A",
          "query": "proxy_system=varnish proxy_cluster=* | json \"log\" as _rawlog nodrop \n| if (isEmpty(_rawlog), _raw, _rawlog) as _raw\n| if (isEmpty(pod),_sourceHost,pod) as Server\n| parse regex \"(?<client_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<logname>\\S+)\\s+(?<user>[\\S]+)\\s+\\[\" nodrop\n| parse regex \"(?<client_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<local_ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+(?<logname>\\S+)\\s+(?<user>[\\S]+)\\s+\\[\" nodrop\n| parse regex \"\\s+\\[(?<date>[^\\]]+)\\]\\s+\\\"(?<method>\\w+)\\s+(?<uri>\\S+)\\s+(?<protocol>\\S+)\\\"\\s+(?<status_code>\\d+)\\s+(?<size>[\\d-]+)\" nodrop\n| parse regex \"\\\"(?<referrer>http[s]{0,1}:[^\\\"]+)\\\"\\s+\\\"(?<agent>[^\\\"]+?)\\\"\"\n| if (status_code matches \"5*\", 1, 0) as ServerError\n| sum(ServerError) as ServerErrors, count as TotalRequests by Server\n| (ServerErrors/TotalRequests) * 100 as ErrorPercentage\n| where ErrorPercentage > 5\n| fields Server, ErrorPercentage, ServerErrors, TotalRequests"
        }
      ],
      "triggers": [
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "Critical",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "GreaterThan",
          "field": null,
          "occurrenceType": "ResultCount",
          "triggerSource": "AllResults"
        },
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "ResolvedCritical",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "LessThanOrEqual",
          "field": null,
          "occurrenceType": "ResultCount",
          "triggerSource": "AllResults"
        }
      ],
      "notifications": [],
      "isDisabled": true,
      "groupNotifications": true,
      "notes": ""
    },
    {
      "name": "Varnish - Backend was unhealthy",
      "description": "This alert is fired when a backend was unhealthy",
      "type": "MonitorsLibraryMonitorExport",
      "monitorType": "Metrics",
      "evaluationDelay": "0m",
      "queries": [
        {
          "rowId": "A",
          "query": "metric=varnish_backend_unhealthy proxy_system=varnish proxy_cluster=* host=* | sum by proxy_cluster,host |  rate increasing"
        }
      ],
      "triggers": [
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "Critical",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "GreaterThan",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        },
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "ResolvedCritical",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "LessThanOrEqual",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        }
      ],
      "notifications": [],
      "isDisabled": true,
      "groupNotifications": true,
      "notes": ""
    },
    {
      "name": "Varnish - Backend failed connections",
      "description": "This alert is fired when backend failed connections",
      "type": "MonitorsLibraryMonitorExport",
      "monitorType": "Metrics",
      "evaluationDelay": "0m",
      "queries": [
        {
          "rowId": "A",
          "query": "metric=varnish_backend_fail proxy_cluster=* host=* | sum by proxy_cluster,host |  rate increasing | fillmissing 0"
        }
      ],
      "triggers": [
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "Warning",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "GreaterThan",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        },
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "ResolvedWarning",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "LessThanOrEqual",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        }
      ],
      "notifications": [],
      "isDisabled": true,
      "groupNotifications": true,
      "notes": ""
    },
    {
      "name": "Varnish - Backend Busy",
      "description": "This alert is fired when a backend busy",
      "type": "MonitorsLibraryMonitorExport",
      "monitorType": "Metrics",
      "evaluationDelay": "0m",
      "queries": [
        {
          "rowId": "A",
          "query": "metric=varnish_backend_unhealthy proxy_system=varnish proxy_cluster=* host=* | sum by proxy_cluster,host |  rate increasing"
        }
      ],
      "triggers": [
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "Warning",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "GreaterThan",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        },
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "ResolvedWarning",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "LessThanOrEqual",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        }
      ],
      "notifications": [],
      "isDisabled": true,
      "groupNotifications": true,
      "notes": ""
    },
    {
      "name": "Varnish - Thread creation failed",
      "description": "This alert is fired when a thread creation failed",
      "type": "MonitorsLibraryMonitorExport",
      "monitorType": "Metrics",
      "evaluationDelay": "0m",
      "queries": [
        {
          "rowId": "A",
          "query": "metric=varnish_threads_failed proxy_cluster=* host=* | sum by proxy_cluster,host"
        }
      ],
      "triggers": [
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "Warning",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "GreaterThan",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        },
        {
          "detectionMethod": "StaticCondition",
          "triggerType": "ResolvedWarning",
          "timeRange": "-5m",
          "threshold": 0,
          "thresholdType": "LessThanOrEqual",
          "field": null,
          "occurrenceType": "Always",
          "triggerSource": "AnyTimeSeries"
        }
      ],
      "notifications": [],
      "isDisabled": true,
      "groupNotifications": true,
      "notes": ""
    }
  ]
}